
########### 每个指令必须有分号结束。#################

########### 全局配置 ###########
#配置用户或者组，默认为nobody nobody
#user nobody;
#允许生成的进程数，默认为1
worker_processes 1;
#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
error_log  /var/log/nginx/error.log warn;
#指定nginx进程运行文件存放地址
pid  /var/run/nginx.pid;

########### events配置 ###########
events {
    #设置网路连接序列化，防止惊群现象发生，默认为on
    accept_mutex on;
    #设置一个进程是否同时接受多个网络连接，默认为off
    multi_accept off;
    #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    #use epoll;      
    #每个进程的最大连接数，默认为512
    worker_connections 1024;
}

########### http配置 ###########
http {
    #文件扩展名与文件类型映射表
    include mime.types;
    #默认文件类型，默认为text/plain
    default_type application/octet-stream;
    #取消服务日志
    #access_log off
    #自定义格式
    log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for';
    #combined为日志格式的默认值
    #access_log logs/access.log main;
    #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    sendfile on;
    #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    sendfile_max_chunk 100k;
    #可以配置一次发送数据的包大小，必须和sendfile搭配使用，tcp_nopush和tcp_nodelay互斥。
    #tcp_nopush on;
    #连接超时时间，默认为75s，可以在http，server，location块。
    keepalive_timeout 65;
    #是否开启压缩
    #gzip on;
    #加载配置文件
    include /etc/nginx/conf.d/*.conf;

########### server配置 ###########
    server {
        #监听端口
        listen 80;
        #监听地址
        server_name localhost;
        #charset koi8-r;
        #access_log logs/host.access.log main;


########### location配置 ###########
        location / {
            #html站点根目录
            root /data/html;
            #首页排序
            index index.html index.htm index.php;
        }

        #错误页404
        error_page 404 /404.html;
        location = /40x.html {
            root /data/html;
        }

        #错误页50X
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /data/html;
        }

########### PHP文件请求全部转发到FastCGI处理 ###########
        location ~ \.php$ {
            #php站点根目录
            root /data/html;
            #php文件请求全部转发到php容器的9000端口
            fastcgi_pass myphp-fpm:9000;
            #设定动态首页
            fastcgi_index index.php;
            #设置脚本文件请求的路径
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #引入FastCGI的配置文件
            include fastcgi_params;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}